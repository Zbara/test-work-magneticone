version: '3'

networks:
    laravel:

services:
    app:
        container_name: ${APP_NAME}
        build:
            context: ./dockerfiles
            dockerfile: nginx.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        ports:
            - "8181:80"
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - php
            - redis
            - mysql
        networks:
            - laravel
    mysql:
        image: mariadb:10.6
        container_name: ${APP_NAME}_db
        restart: unless-stopped
        tty: true
        expose:
            - "3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - laravel

    php:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        expose:
            - "9000"
        volumes:
            - ./:/var/www/html:delegated
        networks:
            - laravel

    redis:
        image: redis:alpine
        restart: unless-stopped
        expose:
            - "6379"
        networks:
            - laravel

    composer:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        volumes:
            - ./:/var/www/html
        depends_on:
            - php
        entrypoint: [ 'composer', '--ignore-platform-reqs' ]
        networks:
            - laravel

    npm:
        image: node:current-alpine
        volumes:
            - ./:/var/www/html
        ports:
            - "3000"
            - "3001"
            - "5173"
        working_dir: /var/www/html
        entrypoint: [ 'npm' ]
        networks:
            - laravel

    artisan:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - mysql
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        networks:
            - laravel
